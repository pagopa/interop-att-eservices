#
# Verifica validitÃ  organization id
x-commons:
  ratelimit-headers: &ratelimit-headers
    X-RateLimit-Limit:
      $ref: '#/components/headers/X-RateLimit-Limit'
    X-RateLimit-Remaining:
      $ref: '#/components/headers/X-RateLimit-Remaining'
    X-RateLimit-Reset:
      $ref: '#/components/headers/X-RateLimit-Reset'
  common-responses: &common-responses
    '400':
      $ref: '#/components/responses/400BadRequest'
    '401':
      $ref: '#/components/responses/401Unauthorized'
    '429':
      $ref: '#/components/responses/429TooManyRequests'
    '500':
      $ref: '#/components/responses/500InternalServerError'
    default:
      $ref: '#/components/responses/default'



openapi: 3.0.1
info:
  version: "3.0.0"
  title: |-
    Check validity organization Id.
  x-summary: >-
    Check about validity of an organizationId and recovery of some personal data

  description: |
    #### Documentation
    This service returns the validity of an organizationId. In case of positive feedback 
    some general information is provided
    registry including any references to the Organization Group:

    - STATO, DENOMINAZIONE, DATA INIZIO ATTIVITA', DATA CESSAZIONE, DATA SOSPENSIONE
    
    #### Denomination
    For sole proprietorships, the business name is provided if declared; otherwise, the owner's last name and first name are given.
    
    #### Notes
    Since the service checks the input data, a response will always be returned with a status of 200 
    even if the input organizationId was not present in the archives.
    
    Some "DATES" may be expressed in the following formats '1001-01-01', '9999-12-31'.
    Such dates should be interpreted as absent or uncertain information.
    A review of the Internal Revenue Service archives is underway to correct this information.

    The service does not require authentication, but must be used respecting the
    throttling headers exposed in accordance with the Interoperability Model Guidelines
    
    #### Compliance with the interoperability model
    The X-RateLimit-Reset Throttling Header is not sent in case of https status code 200, it will only be present in case of 429

    #### Security
    Even though this API is publicly accessible, it is required to send the API Key that allows the infrastructure
    to apply the throttling policies defined within the subscribed plan

  contact:
    name: PagoPA S.p.A
    url: https://www.interop.pagopa.it/
  x-audience:
    - Check
  x-api-id: 5ca54741-8f62-4aad-ab79-13ae762920e3
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: Health Check
    description: |-
      Unauthenticated endpoint for checking service status
  - name: Check
    description: |-
      verifies the validity and existence of the input Organization id
servers:
  - description: Ambiente di Attestazione
    url: https://mtls.eservices.att.interop.pagopa.it/

paths:
  /organization-id-verification/data-preparation/handshake:
    post:
      summary: Upload the certificate and header fields.
      description: Upload the certificate in .pem format along with two fields in the header.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                certificate:
                  type: string
                  format: binary
                  description: The certificate in .pem format
      parameters:
        - in: header
          name: apikey
          required: true
          schema:
            type: string
          description: API key
      responses:
        '200':
          description: Operation completed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Operation confirmation message
        '400':
          $ref: '#/components/responses/400BadRequest'
      tags:
        - Data Preparation
  /organization-id-verification/data-preparation:
    post:
      summary: data preparation api.
      description: Upload your organization's use cases
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DatapreparationTemplate'
            examples:
              alphanumericOrganizationId:
                value:
                  organizationId: 'AAAZZZ00H00T000Z'
              numericOrganizationI:
                value:
                  organizationId: '06363391001'
      parameters:
        - in: header
          name: apikey
          required: true
          schema:
            type: string
          description: API key
        - in: header
          name: x-correlation-id
          required: true
          schema:
            type: string
          description: correlationId
      responses:
        '200':
          description: Operation completed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Operation confirmation message
        '400':
          $ref: '#/components/responses/400BadRequest'
      tags:
        - Data Preparation
    get:
      summary: data preparation api.
      description: List of institution use cases
      security:
        - bearerAuth: []
      parameters:
        - in: header
          name: apikey
          required: true
          schema:
            type: string
          description: API key
        - in: header
          name: x-correlation-id
          required: true
          schema:
            type: string
          description: correlationId
      responses:
        '200':
          description: Operation completed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataPreparationResponse'
        '400':
          $ref: '#/components/responses/400BadRequest'
      tags:
        - Data Preparation
    delete:
      summary: Delete institution use cases
      description: |
        Returns the application status: 200 if it is working correctly
        or an error if the application is temporarily unavailable
        for maintenance or a technical problem.
      operationId: reset
      tags:
        - Data Preparation
      responses:
        <<: *common-responses
        '200':
          description: |
            The server has returned to status. In case of problems
            always returns a problem+json.
          headers:
            <<: *ratelimit-headers
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
  /organization-id-verification/data-preparation/remove:
    post:
      summary: data preparation api.
      description: It removes a specific use case
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DatapreparationTemplate'
            examples:
              alphanumericOrganizationId:
                value:
                  organizationId: 'AAAZZZ00H00T000Z'
              numericOrganizationId:
                value:
                  organizationId: '06363391001'
      parameters:
        - in: header
          name: apikey
          required: true
          schema:
            type: string
          description: API key
        - in: header
          name: x-correlation-id
          required: true
          schema:
            type: string
          description: correlationId
      responses:
        '200':
          description: Operation completed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Operation confirmation message
        '400':
          $ref: '#/components/responses/400BadRequest'
      tags:
        - Data Preparation
  /organization-id-verification/status:
    get:
      summary: Returns the application state.
      description: |
        Returns the application status: 200 if it is working correctly
        or an error if the application is temporarily unavailable
        for maintenance or a technical problem.
      operationId: get_status
      tags:
        - Health Check
      responses:
        '200':
          description: |
            The server has returned to status. In case of problems
            always returns a problem+json.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
  /organization-id-verification/check:
    post:
      summary: Verify an organizationId.
      description: |
        Returns information on the validity of the organizationId
        and if successful, some personal information is added.

      operationId: post_partita_organizationId
      tags:
        - Check
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Richiesta'
            examples:
              numericOrganizationId:
                value:
                  organizationId: '06363391001'
      responses:
        <<: *common-responses
        '200':
          description: |
            The service has returned the validation result - which can be positive or negative -
            depending on the value of the `valid` field.
            Attention! Valid organizationIds may or may not be active: it always works
            verified the contents of the response.
            # header di throttling sono obbligatori

          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerificaOrganizationId'
              examples:    # Esempi per ogni casistica
                Invalida:
                  value:
                    organizationId: '01043931007'
                    valid: false
                Attiva:
                  value:  &example_organizationId
                    organizationId: '06363391001'
                    valid: true
                    status: 'ATTIVA'
                    denomination: 'AGENZIA DELLE ENTRATE'
                    dateStartActivity: '2001-01-02'
                Sospesa:
                  value:
                    <<: *example_organizationId
                    status: 'SOSPESA'
                    dateStartSuspension: '2013-03-15'
                Cessata:
                  value:
                    <<: *example_organizationId
                    status: 'CESSATA'
                    dateEndActivity: '1989-01-01'
                GruppoIva:
                  value:
                    <<: *example_organizationId
                    isOrganizationId: true
                PartecipanteGruppoIva:
                  value:
                    <<: *example_organizationId
                    isPartecipantOrganizationGroupId: true
                    dateStartPartecipationOrganizationGroupId: '2018-10-27'
                    organizationGroupId: '06363391001'

components:
  schemas:

    DatapreparationTemplate:
      type: object
      properties:
        organizationId:
          $ref: '#/components/schemas/OrganizationId'

    DataPreparationResponse:
      type: array
      items:
        type: object
        properties:
          organizationId:
            $ref: '#/components/schemas/OrganizationId'

    Richiesta:
      type: object
      properties:
        organizationId:
          $ref: '#/components/schemas/OrganizationId'
    OrganizationId:
      type: string
      maxLength: 11
      minLength: 11
      pattern: '^[0-9]+'
      example: '06363391001'

    VerificaOrganizationId:
      type: object
      properties:
        organizationId:
          $ref: '#/components/schemas/OrganizationId'
        valid:
          type: boolean
          example: true
        status:
          type: string
          enum:
            - ATTIVA
            - CESSATA
            - SOSPESA
          example: 'ATTIVA'
        denomination:
          type: string
          example: 'AGENZIA DELLE ENTRATE'
        dateStartActivity:
          type: string
          format: date
          example: '1982-05-22'
        dateEndActivity:
          type: string
          format: date
          example: '1982-05-22'
        dateStartSuspension:
          type: string
          format: date
          example: '1982-05-22'
        isOrganizationId:
          type: boolean
          example: false
        organizationGroupId:
          $ref: '#/components/schemas/OrganizationId'
        dateStartPartecipationOrganizationGroupId:
          type: string
          format: date
          example: '1982-05-22'
        isPartecipantOrganizationGroupId:
          type: boolean
          example: false
    Problem:
      properties:
        detail:
          description: |
            A human readable explanation specific to this occurrence of the
            problem. You MUST NOT expose internal informations, personal
            data or implementation details through this field.
          example: Request took too long to complete.
          type: string
        instance:
          description: |
            An absolute URI that identifies the specific occurrence of the problem.
            It may or may not yield further information if dereferenced.
          format: uri
          type: string
        status:
          description: |
            The HTTP status code generated by the origin server for this occurrence
            of the problem.
          example: 503
          exclusiveMaximum: true
          format: int32
          maximum: 600
          minimum: 100
          type: integer
        title:
          description: |
            A short, summary of the problem type. Written in english and readable
            for engineers (usually not suited for non technical stakeholders and
            not localized); example: Service Unavailable
          type: string
        type:
          default: about:blank
          description: |
            An absolute URI that identifies the problem type.  When dereferenced,
            it SHOULD provide human-readable documentation for the problem type
            (e.g., using HTML).
          format: uri
          type: string
      type: object


  headers:
    Retry-After:
      description: |-
        Retry contacting the endpoint *at least* after seconds.
        See https://tools.ietf.org/html/rfc7231#section-7.1.3
      schema:
        type: string
    WWW-Authenticate:
      description: |-
        Auth realm=APIkey
        See https://tools.ietf.org/html/rfc7235#section-4.1
      schema:
        type: string
    X-RateLimit-Limit:
      description: The number of allowed requests in the current period
      schema:
        type: string
    X-RateLimit-Remaining:
      description: The number of remaining requests in the current period
      schema:
        type: string
    X-RateLimit-Reset:
      description: The number of seconds left in the current period
      schema:
        type: string

  responses:
    400BadRequest:
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'
      description: Bad Request
    401Unauthorized:
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'
      headers:
        WWW-Authenticate:
          $ref: '#/components/headers/WWW-Authenticate'
      description: Not authorized
    403Forbidden:
      description: Forbidden
    404NotFound:
      description: Not Found
    429TooManyRequests:
      description: Too many requests
      headers:
        Retry-After:
          $ref: '#/components/headers/Retry-After'
        X-RateLimit-Limit:
          $ref: '#/components/headers/X-RateLimit-Limit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/X-RateLimit-Remaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/X-RateLimit-Reset'
    500InternalServerError:
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'
      description: Service Unavailable
      headers:
        Retry-After:
          $ref: '#/components/headers/Retry-After'
    default:
      description: Unexpected error
