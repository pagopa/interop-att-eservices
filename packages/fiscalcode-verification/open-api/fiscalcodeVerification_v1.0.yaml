#
# Check subject id validity
x-commons:
  ratelimit-headers: &ratelimit-headers
    X-RateLimit-Limit:
      $ref: '#/components/headers/X-RateLimit-Limit'
    X-RateLimit-Remaining:
      $ref: '#/components/headers/X-RateLimit-Remaining'
    X-RateLimit-Reset:
      $ref: '#/components/headers/X-RateLimit-Reset'
  common-responses: &common-responses
    '400':
      $ref: '#/components/responses/400BadRequest'
    '401':
      $ref: '#/components/responses/401Unauthorized'
    '429':
      $ref: '#/components/responses/429TooManyRequests'
    '503':
      $ref: '#/components/responses/503ServiceUnavailable'
    default:
      $ref: '#/components/responses/default'


openapi: 3.0.0
info:
  version: "3.0.0"

  title: |-
    Check subject id validity.
  x-summary: >-
    Check the validity of the subject id for individuals and non-individual entities

  description: |
    #### Documentation
    This service returns the validity of a given subject id, represented by a boolean return field in the JSON response object.

    #### Notes
    Since the service performs a verification on the input data, a response with a 200 status code will always be returned, even if the subject id is not present in the records.

    The response includes a message field that contains the same wording as the public subject id verification service available on the official website.
    
    #### Compliance with the interoperability model
    The Throttling Header X-RateLimit-Reset is not sent in case of an HTTPS status code 200; it will only be present if a 429 status code occurs.

    #### Security
    Although this is a publicly accessible API, it requires the submission of an API Key, allowing the infrastructure to apply throttling policies defined in the subscribed plan.

  contact:
    name: PagoPA S.p.A
    url: https://www.interop.pagopa.it/
  x-audience:
    - public
  x-api-id: 5ca54741-8f62-4aad-ab79-13ae762920e3
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: HealthCheck
    description: |-
      Unauthenticated endpoint for service status check.
  - name: Check
    description: |-
      checks the validity and existence of the input subject id
servers:
  - description: Ambiente di Attestazione
    url: https://mtls.eservices.att.interop.pagopa.it/


paths:
  /fiscalcode-verification/data-preparation/handshake:
    post:
      summary: Upload the certificate and header fields.
      description: Upload the certificate in .pem format along with two fields in the header.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                certificate:
                  type: string
                  format: binary
                  description: The certificate in .pem format
      parameters:
        - in: header
          name: apikey
          required: true
          schema:
            type: string
          description: API key
      responses:
        '200':
          description: Operation completed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Operation confirmation message
        '400':
          $ref: '#/components/responses/400BadRequest'
      tags:
        - Data Preparation
  /fiscalcode-verification/data-preparation:
    post:
      summary: data preparation api.
      description: upload your valid subject id
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DatapreparationTemplate'
            examples:
              alphanumericIdSubject:
                value:
                  idSubject: 'AAAZZZ00H00T000Z'
              numericIdSubject:
                value:
                  idSubject: '06363391001'
      parameters:
        - in: header
          name: apikey
          required: true
          schema:
            type: string
          description: API key
        - in: header
          name: x-correlation-id
          required: true
          schema:
            type: string
          description: correlationId
      responses:
        '200':
          description: Operation completed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Operation confirmation message
        '400':
          $ref: '#/components/responses/400BadRequest'
      tags:
        - Data Preparation
    get:
      summary: data preparation api.
      description: upload the valid subject id
      security:
        - bearerAuth: []
      parameters:
        - in: header
          name: apikey
          required: true
          schema:
            type: string
          description: API key
        - in: header
          name: x-correlation-id
          required: true
          schema:
            type: string
          description: correlationId
      responses:
        '200':
          description: Operation completed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataPreparationResponse'
        '400':
          $ref: '#/components/responses/400BadRequest'
      tags:
        - Data Preparation
    delete:
      summary: Delete all previously entered data
      description: |
        Returns: 200 if successfully cleared.
      operationId: reset
      tags:
        - Data Preparation
      responses:
        <<: *common-responses
        '200':
          description: |
            In case of errors
            returns a problem+json.
          headers:
            <<: *ratelimit-headers
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
  /fiscalcode-verification/data-preparation/remove:
    post:
      summary: data preparation api.
      description: deletes a previously entered subject id
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DatapreparationTemplate'
            examples:
              alphanumericIdSubject:
                value:
                  idSubject: 'AAAZZZ00H00T000Z'
              numericIdSubject:
                value:
                  idSubject: '06363391001'
      parameters:
        - in: header
          name: apikey
          required: true
          schema:
            type: string
          description: API key
        - in: header
          name: x-correlation-id
          required: true
          schema:
            type: string
          description: correlationId
      responses:
        '200':
          description: Operation completed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Operation confirmation message
        '400':
          $ref: '#/components/responses/400BadRequest'
      tags:
        - Data Preparation
  /fiscalcode-verification/status:
    get:
      summary: Returns the application state.
      description: |
        Returns the application status: 200 if it is working correctly
        or an error if the application is temporarily unavailable
        for maintenance or a technical problem.
      operationId: get_status
      tags:
        - HealthCheck
      responses:
        <<: *common-responses
        '200':
          description: |
            The server has returned to status. In case of problems
            always returns a problem+json..
          headers:
            <<: *ratelimit-headers
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
  /fiscalcode-verification/check:
    post:
      summary: Carry out a validation of the input subject id.
      operationId: post_verifica_codiceFiscale
      tags:
        - Check
      description: |
        Returns information about the validity of the input subject id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Richiesta'
            examples:
              alphanumericIdSubject:
                value:
                  idSubject: 'AAAZZZ00H00T000Z'
              numericIdSubject:
                value:
                  idSubject: '06363391001'
      responses:
        <<: *common-responses
        '200':
          description: |
            The server was able to verify the validity of the subject id.
          # header di throttling requires
          headers:
            <<: *ratelimit-headers
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerificaCodiceFiscale'
              examples:    # Examples for each case
                ValidIdSubject:
                  value:
                    idSubject: '06363391001'
                    valid: true
                    message: "Valid id subject"
                NotUsableIdSubject:
                  value:
                    idSubject: '***********'
                    valid: true
                    message: "Valid subject id, no longer usable"
                NotValidUpdatedInOther:
                  value:
                    idSubject: '***********'
                    valid: false
                    message: "Valid subject id, no longer usable as it has been updated to another subject id"
                NotValidIdSubject:
                  value:
                    idSubject: 'AAAZZZ00H00T000Z'
                    valid: false
                    message: "Not valid id subject"
components:

  schemas:

    DatapreparationTemplate:
      type: object
      properties:
        idSubject:
          $ref: '#/components/schemas/CodiceFiscale'

    DataPreparationResponse:
      type: array
      items:
        type: object
        properties:
          idSubject:
            $ref: '#/components/schemas/CodiceFiscale'

    Richiesta:
      type: object
      properties:
        idSubject:
          $ref: '#/components/schemas/CodiceFiscale'


    CodiceFiscale:
      type: string
      minLength: 11
      maxLength: 16
      pattern: '^[0-9]{11}|(?:^(?:[A-Z][AEIOU][AEIOUX]|[B-DF-HJ-NP-TV-Z]{2}[A-Z]){2}(?:[\dLMNP-V]{2}(?:[A-EHLMPR-T](?:[04LQ][1-9MNP-V]|[15MR][\dLMNP-V]|[26NS][0-8LMNP-U])|[DHPS][37PT][0L]|[ACELMRT][37PT][01LM]|[AC-EHLMPR-T][26NS][9V])|(?:[02468LNQSU][048LQU]|[13579MPRTV][26NS])B[26NS][9V])(?:[A-MZ][1-9MNP-V][\dLMNP-V]{2}|[A-M][0L](?:[1-9MNP-V][\dLMNP-V]|[0L][1-9MNP-V]))[A-Z]$)'

      example: '06363391001'
      description: 'it can take on an alphanumeric value of length 16 or a numeric value of length 11 (i.e. 06363391001)'


    VerificaCodiceFiscale:
      type: object
      properties:
        idSubject:
          $ref: '#/components/schemas/CodiceFiscale'
        valid:
          type: boolean
          example: true
        message:
          type: string
          example: "Codice fiscale valido"
          description: "messaggio congurente con il serivizio a libero accesso di verifica codice fiscale sul sito istituzionale"


    
    Problem:
      properties:
        detail:
          description: |
            A human readable explanation specific to this occurrence of the
            problem. You MUST NOT expose internal informations, personal
            data or implementation details through this field.
          example: Request took too long to complete.
          type: string
        instance:
          description: |
            An absolute URI that identifies the specific occurrence of the problem.
            It may or may not yield further information if dereferenced.
          format: uri
          type: string
        status:
          description: |
            The HTTP status code generated by the origin server for this occurrence
            of the problem.
          example: 503
          exclusiveMaximum: true
          format: int32
          maximum: 600
          minimum: 100
          type: integer
        title:
          description: |
            A short, summary of the problem type. Written in english and readable
            for engineers (usually not suited for non technical stakeholders and
            not localized); example: Service Unavailable
          type: string
        type:
          default: about:blank
          description: |
            An absolute URI that identifies the problem type.  When dereferenced,
            it SHOULD provide human-readable documentation for the problem type
            (e.g., using HTML).
          format: uri
          type: string
      type: object


  headers:
    Retry-After:
      description: |-
        Retry contacting the endpoint *at least* after seconds.
        See https://tools.ietf.org/html/rfc7231#section-7.1.3
      schema:
        type: string
    WWW-Authenticate:
      description: |-
        Auth realm=APIkey
        See https://tools.ietf.org/html/rfc7235#section-4.1
      schema:
        type: string
    X-RateLimit-Limit:
      description: The number of allowed requests in the current period
      schema:
        type: string
    X-RateLimit-Remaining:
      description: The number of remaining requests in the current period
      schema:
        type: string
    X-RateLimit-Reset:
      description: The number of seconds left in the current period
      schema:
        type: string

  responses:
    400BadRequest:
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'
      description: Bad Request
    401Unauthorized:
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'
      headers:
        WWW-Authenticate:
          $ref: '#/components/headers/WWW-Authenticate'
      description: Not authorized
    403Forbidden:
      description: Forbidden
    404NotFound:
      description: Not Found
    429TooManyRequests:
      description: Too many requests
      headers:
        Retry-After:
          $ref: '#/components/headers/Retry-After'
        X-RateLimit-Limit:
          $ref: '#/components/headers/X-RateLimit-Limit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/X-RateLimit-Remaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/X-RateLimit-Reset'
    503ServiceUnavailable:
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'
      description: Service Unavailable
      headers:
        Retry-After:
          $ref: '#/components/headers/Retry-After'
    default:
      description: Unexpected error
