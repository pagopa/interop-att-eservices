openapi: 3.0.3
info:
  title: Consultazione API Accertamento Residenza AR001 
  description: |-
    Servizio per la consultazione della residenza di un cittadino ai fini di un accertamento
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
  x-summary: Accertamento residenza
servers:
  - url: 'https://inserire.url.test.app.it'
    description: Url di test
  - url: 'https://insrire.url.esercizio.app.it'
    description: Url di esercizio
tags:
  - name: DataPreparation
    description: Configurazione Data Preparation
  - name: ResidenceVerification
    description: Consultazione enti
  - name: Health
    description: Verifica stato applicativo
security:
  - bearerAuth: []
    Agid-JWT-Signature: []
paths:
  /residence-verification/data-preparation:
    post:
      tags:
        - DataPreparation
      summary: Insert data preparation residence-verification
      description: Insert data preparation residence-verification
      operationId: InsertAR001
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataPreparationTemplate'
      responses:
        '200':
          description: signal inteserted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataPreparationResponse'
        '400':
          description: Bad request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/GeneralError'
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/GeneralError'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/GeneralError'
        '429':
          description: Too Many Requests
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/GeneralError'
    
    get:
      tags:
        - DataPreparation
      summary: Elenco dei caso d'uso
      description: Lista di tutti i casi d'uso dell'ente
      operationId: GetAllAR001
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/DataPreparationTemplateResponse'
        '400':
          description: Bad request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/GeneralError'
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/GeneralError'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/GeneralError'
        '429':
          description: Too Many Requests
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/GeneralError'
    
    delete:
      tags:
        - DataPreparation
      summary: Eliminazione di tutti i casi d'uso
      description: Eliminazione di un insieme di casi d'uso dell'ente
      operationId: DeleteAR001
      security:
        - bearerAuth: []
      responses:
        '200':
          description: operazione avvenuta con successo
        '400':
          description: Bad request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/GeneralError'
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/GeneralError'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/GeneralError'
        '429':
          description: Too Many Requests
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/GeneralError'
                
  /residence-verification/data-preparation/{uuid}:
    parameters:
      - $ref: '#/components/parameters/pathUUID'
    get:
      tags:
        - DataPreparation
      summary: Insert data preparation residence-verification
      description: Insert data preparation residence-verification
      operationId: GetByIdAR001
      security:
        - bearerAuth: []
      responses:
        '200':
          description: signal inteserted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataPreparationTemplate'
        '400':
          description: Bad request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/GeneralError'
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/GeneralError'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/GeneralError'
        '429':
          description: Too Many Requests
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/GeneralError'
    delete:
      tags:
        - DataPreparation
      summary: Eliminazione di un singolo caso d'uso
      description: Eliminazione di un singolo caso d'uso dell'ente
      operationId: DeleteByIdAR001
      security:
        - bearerAuth: []
      responses:
        '200':
          description: operazione avvenuta con successo
        '400':
          description: Bad request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/GeneralError'
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/GeneralError'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/GeneralError'
        '429':
          description: Too Many Requests
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/GeneralError'
                
  /residence-verification:
    post:
      tags:
        - ARService001
      summary: Trova caso d'uso
      description: Consultazione di un caso d'uso dell'ente
      operationId: AR001
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
                $ref: '#/components/schemas/RichiestaAR001'
      responses:
        '200':
          description: signal inteserted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RispostaAR001'
        '400':
          description: Bad request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/GeneralError'
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/GeneralError'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/GeneralError'
        '429':
          description: Too Many Requests
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/GeneralError'
  /residence-verification/verify:
    post:
      tags:
        - ARService002
      summary: Trova caso d'uso
      description: Consultazione di un caso d'uso
      operationId: AR002
      security:
        - bearerAuth: []
      requestBody:
        required: true
        description: Richiesta da consultare
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RichiestaAR002'
      responses:
        "200":
          description: Caso d'uso trovato
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RispostaAR002OK'
        "400":
          description: Caso d'uso invalido
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/RispostaKO'
        "404":
          description: Caso d'uso non trovato
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/RispostaKO'
        "500":
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/RispostaKO'
  /residence-verification/status:
    get:
      tags:
        - Health
      summary: Health status endpoint
      description: Return ok
      operationId: getStatus
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"


components:
  schemas:
    RichiestaAR002:
      type: object
      required:
        - idOperazioneClient
        - criteriRicerca
        - datiRichiesta
      properties:
        idOperazioneClient:
          type: string
          description: Identificativo univoco attribuito all'operazione dall'ente.
        criteriRicerca:
          $ref: '#/components/schemas/TipoCriteriRicercaAR002'
        verifica:
          $ref: '#/components/schemas/TipoVerificaAR002'
        datiRichiesta:
          $ref: '#/components/schemas/TipoDatiRichiestaAR002'
    RispostaAR002OK:
      type: object
      properties:
        idOperazione:
          type: string
        soggetti:
          $ref: '#/components/schemas/VerifyTipoDatiSoggetti'
        listaAnomalie:
          type: array
          items:
            $ref: '#/components/schemas/TipoErroriAnomalia'
    RispostaKO:
      type: object
      properties:
        idOperazioneUN:
          type: string
        listaErrori:
          type: array
          items:
            $ref: '#/components/schemas/TipoErroriAnomalia'
    TipoCriteriRicercaAR002:
      type: object
      properties:
        codiceFiscale:
          type: string
        id:
          type: string
          description: Identificativo Unico Nazionale
        cognome:
          type: string
        senzaCognome:
          type: string
        nome:
          type: string
        senzaNome:
          type: string
        sesso:
          type: string
        datiNascita:
          $ref: '#/components/schemas/TipoDatiNascitaE000'
    TipoVerificaAR002:
      type: object
      properties:
        residenza:
          $ref: '#/components/schemas/TipoVerificaResidenza'
    TipoVerificaResidenza:
      type: object
      properties:
        tipoIndirizzo:
          type: string
        indirizzo:
          $ref: '#/components/schemas/TipoIndirizzo'
        localitaEstera:
          $ref: '#/components/schemas/TipoLocalitaEstera'
    TipoLocalitaEstera:
      type: object
      properties:
        indirizzoEstero:
          $ref: '#/components/schemas/TipoIndirizzoEstero'
        consolato:
          $ref: '#/components/schemas/TipoConsolato'
    TipoDatiRichiestaAR002:
      type: object
      required:
        - dataRiferimentoRichiesta
        - casoUso
        - motivoRichiesta
      properties:
        dataRiferimentoRichiesta:
          type: string
          description: Data cui deve essere riferita la versione della scheda anagrafica
          format: YYYY-MM-DD
          example: '2021-11-15'
        motivoRichiesta:
          type: string
          description: campo per l’indicazione obbligatoria del numero di riferimento della pratica per quale è effettuata l’interrogazione (es. numero di protocollo, fascicolo, verbale, etc.)
        casoUso:
          type: string
          description: caso d'uso (es. C001)
    Problem:
      properties:
        type:
          description: URI reference of type definition
          type: string
        status:
          description: The HTTP status code generated by the origin server for this occurrence of the problem.
          example: 503
          type: integer
        title:
          description: A short, summary of the problem type. Written in english and readable
          example: Service Unavailable
          type: string
        correlationId:
          description: Unique identifier of the request
          example: "53af4f2d-0c87-41ef-a645-b726a821852b"
          type: string
        detail:
          description: A human readable explanation of the problem.
          example: Request took too long to complete.
          type: string
        errors:
          type: array
          minItems: 1
          items:
            $ref: "#/components/schemas/ProblemError"
      required:
        - type
        - status
        - title
        - errors
    ProblemError:
      properties:
        code:
          description: Internal code of the error
          example: 123-4567
          type: string
        detail:
          description: A human readable explanation specific to this occurrence of the problem.
          example: Parameter not valid
          type: string
      required:
        - code
        - detail

    DataPreparationTemplateResponse:
      description: Configurazione data preparation
      type: object
      allOf:
        - type: object
          properties:
            uuid:
              description: >-
                identificativo associato alla configurazione salvata
              type: string
              format: uuid
        - $ref: '#/components/schemas/DataPreparationTemplate'

    DataPreparationTemplate:
      type: object
      additionalProperties: false
      title: DataPreparation
      description: represents the details of data preparation template
      properties:
        soggetto:
          $ref: '#/components/schemas/TipoCriteriRicercaTemplateAR001'
        residenza:
          $ref: '#/components/schemas/TipoResidenza'
          
    DataPreparationResponse:
      type: object
      additionalProperties: false
      title: Signal
      description: represents the id of the signal just entered.
      properties:
        uuid:
          type: string
          description: id of Operation
          
    RichiestaAR001:
      type: object
      required:
        - idOperazioneClient
        - parametriRicerca
        - richiesta
      properties:
        idOperazioneClient:
          type: string
        parametriRicerca:
          $ref: '#/components/schemas/TipoParametriRicercaAR001'
        richiesta:
          $ref: '#/components/schemas/TipoRichiestaAR001'
    RispostaAR001:
      type: object
      properties:
        idOperazione:
          type: string
        soggetti:
          $ref: '#/components/schemas/TipoListaSoggetti'
        listaAnomalie:
          type: array
          items:
            $ref: '#/components/schemas/TipoErroriAnomalia'
    TipoCriteriRicercaTemplateAR001:
      type: object
      properties:
        codiceFiscale:
          type: string
        id:
          type: string
          description: Identificativo Unico Nazionale
        cognome:
          type: string
        nome:
          type: string
        sesso:
          type: string
        datiNascita:
          $ref: '#/components/schemas/TipoDatiNascitaTemplateE000'
          
    TipoParametriRicercaAR001:
      type: object
      properties:
        codiceFiscale:
          type: string
        id:
          type: string
          description: Identificativo Unico Nazionale
        cognome:
          type: string
        senzaCognome:
          type: string
        nome:
          type: string
        senzaNome:
          type: string
        sesso:
          type: string
        datiNascita:
          $ref: '#/components/schemas/TipoDatiNascitaE000'
    TipoRichiestaAR001:
      type: object
      required:
        - dataRiferimentoRichiesta
        - casoUso
        - motivoRichiesta
      properties:
        dataRiferimentoRichiesta:
          type: string
          description: Data cui deve essere riferita la versione della scheda anagrafica
          format: YYYY-MM-DD
          example: '2021-11-15'
        motivoRichiesta:
          type: string
          description: campo per l’indicazione obbligatoria del numero di riferimento della pratica per quale è effettuata l’interrogazione (es. numero di protocollo, fascicolo, verbale, etc.)
        casoUso:
          type: string
          description: caso d'uso (es. C001)
    TipoErroriAnomalia:
      type: object
      properties:
        codiceErroreAnomalia:
          type: string
        tipoErroreAnomalia:
          type: string
        testoErroreAnomalia:
          type: string
        oggettoErroreAnomalia:
          type: string
        campoErroreAnomalia:
          type: string
        valoreErroreAnomalia:
          type: string    
    TipoListaSoggetti:
      type: object
      properties:
        soggetto:
          type: array
          items:
            $ref: '#/components/schemas/TipoDatiSoggettiEnte'
    VerifyTipoDatiSoggetti:
      type: object
      properties:
        infoSoggetto:
          type: array
          items:
            $ref: '#/components/schemas/InfoSoggettoEnte'
    InfoSoggettoEnte:
      type: object
      properties:
        infoSoggettoEnte:
          type: array
          items:
            $ref: '#/components/schemas/TipoInfoSoggetto'
    TipoInfoSoggetto:
      type: object
      properties:
        id:
          type: string
        chiave:
          type: string
        valore:
          $ref: '#/components/schemas/TipoInfoValore'
        valoreTesto:
          type: string
        valoreData:
          type: string
          format: YYYY-MM-DD
          example: '2021-11-15'
        dettaglio:
          type: string      
    TipoInfoValore:
      enum:
      - "A"
      - "N"
      - "S"
      type: string
    TipoDatiSoggettiEnte:
      type: object
      properties:
        generalita:
          $ref: '#/components/schemas/TipoGeneralita'
        residenza:
          type: array
          items:
            $ref: '#/components/schemas/TipoResidenza'
        identificativi:
          $ref: '#/components/schemas/TipoIdentificativi'
        datiDecesso:
          $ref: '#/components/schemas/TipoDatiEvento'
    TipoDatiNascitaTemplateE000:
      type: object
      properties:
        dataEvento:
          type: string
          format: YYYY-MM-DD
          example: '2021-11-15'
        senzaGiorno:
          type: string
        luogoNascita:
          $ref: '#/components/schemas/TipoLuogoNascitaE000' 
          
    TipoDatiNascitaE000:
      type: object
      properties:
        dataEvento:
          type: string
          format: YYYY-MM-DD
          example: '2021-11-15'
        senzaGiorno:
          type: string
        senzaGiornoMese:
          type: string
        luogoNascita:
          $ref: '#/components/schemas/TipoLuogoNascitaE000'  
    TipoLuogoNascitaE000:
      type: object
      properties:
        luogoEccezionale:
          type: string
        comune:
          $ref: '#/components/schemas/TipoComune'
        localita:
          $ref: '#/components/schemas/TipoLocalita'  
    TipoComune:
      type: object
      properties:
        nomeComune:
          type: string
        codiceIstat:
          type: string
        siglaProvinciaIstat:
          type: string
        descrizioneLocalita:
          type: string          
    TipoLocalita:
      type: object
      properties:
        descrizioneLocalita:
          type: string
        descrizioneStato:
          type: string
        codiceStato:
          type: string
        provinciaContea:
          type: string
    TipoGeneralita:
      type: object
      properties:
        codiceFiscale:
          $ref: '#/components/schemas/TipoCodiceFiscale'
        cognome:
          type: string
        senzaCognome:
          type: string
        nome:
          type: string
        senzaNome:
          type: string
        sesso:
          type: string
        dataNascita:
          type: string
          format: YYYY-MM-DD
          example: '2021-11-15'
        senzaGiorno:
          type: string
        senzaGiornoMese:
          type: string
        luogoNascita:
          $ref: '#/components/schemas/TipoLuogoEvento'
        soggettoAIRE:
          type: string
        annoEspatrio:
          type: string
        idSchedaSoggettoComune:
          $ref: '#/components/schemas/TipoIdSchedaSoggettoComune'
        idSchedaSoggetto:
          type: string
        note:
          type: string   
    TipoCodiceFiscale:
      type: object
      properties:
        codFiscale:
          type: string
        validitaCF:
          type: string
        dataAttribuzioneValidita:
          type: string
          format: YYYY-MM-DD
          example: '2021-11-15'
    TipoLuogoEvento:
      type: object
      properties:
        luogoEccezionale:
          type: string
        comune:
          $ref: '#/components/schemas/TipoComune'
        localita:
          $ref: '#/components/schemas/TipoLocalita'
    TipoIdSchedaSoggettoComune:
      type: object
      properties:
        idSchedaSoggettoComuneIstat:
          type: string
        idSchedaSoggetto:
          type: string
    TipoResidenza:
      type: object
      properties:
        tipoIndirizzo:
          type: string
        noteIndirizzo:
          type: string
        indirizzo:
          $ref: '#/components/schemas/TipoIndirizzo'
        localitaEstera:
          $ref: '#/components/schemas/TipoLocalitaEstera1'
        presso:
          type: string
        dataDecorrenzaResidenza:
          type: string
          format: YYYY-MM-DD
          example: '2021-11-15'
    TipoIndirizzo:
      type: object
      properties:
        cap:
          type: string
        comune:
          $ref: '#/components/schemas/TipoComune'
        frazione:
          type: string
        toponimo:
          $ref: '#/components/schemas/TipoToponimo'
        numeroCivico:
          $ref: '#/components/schemas/TipoNumeroCivico'
    TipoLocalitaEstera1:
      type: object
      properties:
        indirizzoEstero:
          $ref: '#/components/schemas/TipoIndirizzoEstero'
        consolato:
          $ref: '#/components/schemas/TipoConsolato'
    TipoToponimo:
      type: object
      properties:
        codSpecie:
          type: string
        specie:
          type: string
        specieFonte:
          type: string
        codToponimo:
          type: string
        denominazioneToponimo:
          type: string
        toponimoFonte:
          type: string
    TipoNumeroCivico:
      type: object
      properties:
        codiceCivico:
          type: string
        civicoFonte:
          type: string
        numero:
          type: string
        metrico:
          type: string
        progSNC:
          type: string
        lettera:
          type: string
        esponente1:
          type: string
        colore:
          type: string
        civicoInterno:
          $ref: '#/components/schemas/TipoCivicoInterno'
    TipoCivicoInterno:
      type: object
      properties:
        corte:
          type: string
        scala:
          type: string
        interno1:
          type: string
        espInterno1:
          type: string
        interno2:
          type: string
        espInterno2:
          type: string
        scalaEsterna:
          type: string
        secondario:
          type: string
        piano:
          type: string
        nui:
          type: string
        isolato:
          type: string
    TipoIndirizzoEstero:
      type: object
      properties:
        cap:
          type: string
        localita:
          $ref: '#/components/schemas/TipoDatoLocalitaEstera'
        toponimo:
          $ref: '#/components/schemas/TipoToponimoEstero'
    TipoConsolato:
      type: object
      properties:
        codiceConsolato:
          type: string
        descrizioneConsolato:
          type: string
    TipoDatoLocalitaEstera:
      type: object
      properties:
        descrizioneLocalita:
          type: string
        descrizioneStato:
          type: string
        codiceStato:
          type: string
        provinciaContea:
          type: string
    TipoToponimoEstero:
      type: object
      properties:
        denominazione:
          type: string
        numeroCivico:
          type: string
    TipoIdentificativi:
      type: object
      properties:
        id:
          type: string
    TipoDatiEvento:
      type: object
      properties:
        dataEvento:
          type: string
          format: YYYY-MM-DD
          example: '2021-11-15'
        senzaGiorno:
          type: string
        senzaGiornoMese:
          type: string
        luogoEvento:
          $ref: '#/components/schemas/TipoLuogoEvento'
        attoEvento:
          $ref: '#/components/schemas/TipoAttoEvento'
    TipoAttoEvento:
      type: object
      properties:
        atto:
          $ref: '#/components/schemas/TipoAtto'
        attoANSC:
          $ref: '#/components/schemas/TipoAttoANSC'
    TipoAttoANSC:
      type: object
      properties:
        idANSC:
          type: string
        comuneRegistrazione:
          $ref: '#/components/schemas/TipoComune'
        anno:
          type: string
        ufficioMunicipio:
          type: string
        numeroComunale:
          type: string
        dataFormazioneAtto:
          type: string
          format: YYYY-MM-DD
          example: '2021-11-15'
        trascritto:
          type: string
    TipoAtto:
      type: object
      properties:
        comuneRegistrazione:
          $ref: '#/components/schemas/TipoComune'
        ufficioMunicipio:
          type: string
        anno:
          type: string
        parte:
          type: string
        serie:
          type: string
        numeroAtto:
          type: string
        volume:
          type: string
        dataFormazioneAtto:
          type: string
          format: YYYY-MM-DD
          example: '2021-11-15'
        trascritto:
          type: string
    GeneralError:
      type: object
      properties:
        idOperazione:
          type: string
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Error'
    Error:
      type: object
      properties:
        codiceErroreAnomalia:
          type: string
        tipoErroreAnomalia:
          type: string
        testoErroreAnomalia:
          type: string
        oggettoErroreAnomalia:
          type: string
        campoErroreAnomalia:
          type: string
        valoreErroreAnomalia:
          type: string
          
  parameters:
    pathUUID:
      description: >-
        Identificativo del caso d'uso salvato
      name: uuid
      in: path
      required: true
      schema:
        type: string
        format: uuid
        
  securitySchemes:
    bearerAuth:
      type: http
      description: 'A bearer token in the format of a JWS and conformed to the specifications included in [RFC8725](https://tools.ietf.org/html/RFC8725).'
      scheme: bearer
      bearerFormat: JWT          
    Agid-JWT-Signature:
      type: apiKey
      in: header
      name: Agid-JWT-Signature
      description: |-
        Header della firma di JWS.
        Il valore di questo header è una firma JWS.
        Vedere Modi  [integrity_rest_02] Integrità del payload del messaggio REST in PDND
    Agid-JWT-TrackingEvidence:
      type: apiKey
      in: header
      name: Agid-JWT-TrackingEvidence
      description: |-
        Header della firma di JWS.
        Il valore di questo header è una firma JWS.
        Vedere Modi  [audit_rest_02] Inoltro dati tracciati nel dominio del Fruitore REST con correlazione
        Claim da includere:
            userID, un identificativo univoco dell'utente interno al dominio del fruitore che ha determinato l'esigenza della request di accesso all'e-service dell'erogatore;
            userLocation, un identificativo univoco della postazione interna al dominio del fruitore da cui è avviata l'esigenza della request di accesso all'e-service dell'erogatore;
            LoA, livello di sicurezza o di garanzia adottato nel processo di autenticazione informatica nel dominio del fruitore.