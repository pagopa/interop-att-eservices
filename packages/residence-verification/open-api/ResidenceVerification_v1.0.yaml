openapi: 3.0.3
info:
  title: Residence Address Verification API
  description: |-
    Service for verifying a citizen's residence for the purposes of an investigation
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
  x-summary: Residence verification
servers:
  - url: 'http://eservices.att.interop.pagopa.it/'
    description: Attestation Environment
tags:
  - name: Data Preparation
    description: Data Preparation Verification
  - name: Residence Address Check
    description: Residence verification
  - name: Health Check
    description: Check application status
security:
  - bearerAuth: []
    Agid-JWT-Signature: []
paths:
  /residence-verification/data-preparation:
    post:
      tags:
        - Data Preparation
      summary: Insert data preparation residence-verification
      description: Insert data preparation residence-verification
      operationId: InsertAR001
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataPreparationTemplate'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataPreparationResponse'
        '400':
          description: Bad request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/GeneralError'
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/GeneralError'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/GeneralError'
        '429':
          description: Too Many Requests
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/GeneralError'

    get:
      tags:
        - Data Preparation
      summary: List of institution use cases
      description: List of institution use cases
      operationId: GetAllAR001
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DataPreparationTemplateResponse'
        '400':
          description: Bad request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/GeneralError'
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/GeneralError'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/GeneralError'
        '429':
          description: Too Many Requests
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/GeneralError'

    delete:
      tags:
        - Data Preparation
      summary: Delete institution use cases
      description: Delete institution use cases
      operationId: DeleteAR001
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Operation completed successfully
        '400':
          description: Bad request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/GeneralError'
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/GeneralError'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/GeneralError'
        '429':
          description: Too Many Requests
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/GeneralError'

  /residence-verification/data-preparation/{uuid}:
    parameters:
      - $ref: '#/components/parameters/pathUUID'
    get:
      tags:
        - Data Preparation
      summary: Insert data preparation residence-verification
      description: Insert data preparation residence-verification
      operationId: GetByIdAR001
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataPreparationTemplate'
        '400':
          description: Bad request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/GeneralError'
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/GeneralError'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/GeneralError'
        '429':
          description: Too Many Requests
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/GeneralError'
    delete:
      tags:
        - Data Preparation
      summary: Remove a single use case
      description: Remove a single use case
      operationId: DeleteByIdAR001
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Operation completed successfully
        '400':
          description: Bad request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/GeneralError'
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/GeneralError'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/GeneralError'
        '429':
          description: Too Many Requests
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/GeneralError'

  /residence-verification:
    post:
      tags:
        - Residence Address Check
      summary: Search for a residential address
      description: Search for a residential address
      operationId: AR001
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RichiestaAR001'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RispostaAR001'
        '400':
          description: Bad request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/GeneralError'
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/GeneralError'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/GeneralError'
        '429':
          description: Too Many Requests
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/GeneralError'
  /residence-verification/check:
    post:
      tags:
        - Residence Address Check
      summary: Check for a residential address
      description: Check for a residential address
      operationId: AR002
      security:
        - bearerAuth: []
      requestBody:
        required: true
        description: Request info
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RichiestaAR002'
      responses:
        "200":
          description: Address found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RispostaAR002OK'
        "400":
          description: Not valid request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/RispostaKO'
        "404":
          description: Address not found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/RispostaKO'
        "500":
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/RispostaKO'
  /residence-verification/status:
    get:
      tags:
        - Health Check
      summary: Health status endpoint
      description: Return ok
      operationId: getStatus
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"

components:
  schemas:
    RichiestaAR002:
      type: object
      required:
        - operationId
        - criteria
        - requestData
      properties:
        operationId:
          type: string
          description: Unique identifier for the operation.
        criteria:
          $ref: '#/components/schemas/TipocriteriaAR002'
        check:
          $ref: '#/components/schemas/TipoVerificaAR002'
        requestData:
          $ref: '#/components/schemas/TipoRequestDataAR002'
    RispostaAR002OK:
      type: object
      properties:
        idOp:
          type: string
        subjects:
          $ref: '#/components/schemas/VerifyTipoDatiSubjects'
        warnings:
          type: array
          items:
            $ref: '#/components/schemas/TipoErroriAnomalia'
    RispostaKO:
      type: object
      properties:
        nationalUniqueIdentifier:
          type: string
        errors:
          type: array
          items:
            $ref: '#/components/schemas/TipoErroriAnomalia'
    TipocriteriaAR002:
      type: object
      properties:
        fiscalCode:
          type: string
        id:
          type: string
          description: National Unique Identifier
        surname:
          type: string
        nosurname:
          type: string
        name:
          type: string
        noname:
          type: string
        gender:
          type: string
        birthDate:
          $ref: '#/components/schemas/TipoDatiNascitaE000'
    TipoVerificaAR002:
      type: object
      properties:
        address:
          $ref: '#/components/schemas/TipoVerificaResidenza'
    TipoVerificaResidenza:
      type: object
      properties:
        addressType:
          type: string
        address:
          $ref: '#/components/schemas/TipoIndirizzo'
        foreignState:
          $ref: '#/components/schemas/TipoLocalitaEstera'
    TipoLocalitaEstera:
      type: object
      properties:
        foreignAddress:
          $ref: '#/components/schemas/TipoIndirizzoEstero'
        consulate:
          $ref: '#/components/schemas/TipoConsolato'
    TipoRequestDataAR002:
      type: object
      required:
        - dateOfRequest
        - useCase
        - motivation
      properties:
        dateOfRequest:
          type: string
          description: Date to which the version of the personal data sheet must refer
          format: YYYY-MM-DD
          example: '2021-11-15'
        motivation:
          type: string
          description: Mandatory field for entering the reference number of the case for which the inquiry is made (e.g., protocol number, file, report, etc.).
        useCase:
          type: string
          description: caso d'uso (es. C001)
    Problem:
      properties:
        type:
          description: URI reference of type definition
          type: string
        status:
          description: The HTTP status code generated by the origin server for this occurrence of the problem.
          example: 503
          type: integer
        title:
          description: A short, summary of the problem type. Written in english and readable
          example: Service Unavailable
          type: string
        correlationId:
          description: Unique identifier of the request
          example: "53af4f2d-0c87-41ef-a645-b726a821852b"
          type: string
        detail:
          description: A human readable explanation of the problem.
          example: Request took too long to complete.
          type: string
        errors:
          type: array
          minItems: 1
          items:
            $ref: "#/components/schemas/ProblemError"
      required:
        - type
        - status
        - title
        - errors
    ProblemError:
      properties:
        code:
          description: Internal code of the error
          example: 123-4567
          type: string
        detail:
          description: A human readable explanation specific to this occurrence of the problem.
          example: Parameter not valid
          type: string
      required:
        - code
        - detail

    DataPreparationTemplateResponse:
      description: Data Preparation Configuration
      type: object
      allOf:
        - type: object
          properties:
            uuid:
              description: >-
                identifier associated with the saved configuration
              type: string
              format: uuid
        - $ref: '#/components/schemas/DataPreparationTemplate'

    DataPreparationTemplate:
      type: object
      additionalProperties: false
      title: Data Preparation
      description: represents the details of data preparation template
      properties:
        subject:
          $ref: '#/components/schemas/TipoCriteriaTemplateAR001'
        address:
          $ref: '#/components/schemas/TipoResidenza'

    DataPreparationResponse:
      type: object
      additionalProperties: false
      title: Data Prearation Response
      description: represents the id of the data just entered.
      properties:
        uuid:
          type: string
          description: id of Operation

    RichiestaAR001:
      type: object
      required:
        - operationId
        - criteria
        - requestData
      properties:
        operationId:
          type: string
        criteria:
          $ref: '#/components/schemas/TipoParametriRicercaAR001'
        requestData:
          $ref: '#/components/schemas/TipoRichiestaAR001'
    RispostaAR001:
      type: object
      properties:
        idOp:
          type: string
        subjects:
          $ref: '#/components/schemas/TipoListaSubjects'
        warnings:
          type: array
          items:
            $ref: '#/components/schemas/TipoErroriAnomalia'
    TipoCriteriaTemplateAR001:
      type: object
      properties:
        fiscalCode:
          type: string
        id:
          type: string
          description: National Unique Identifier
        surname:
          type: string
        name:
          type: string
        gender:
          type: string
        birthDate:
          $ref: '#/components/schemas/TipoDatiNascitaTemplateE000'

    TipoParametriRicercaAR001:
      type: object
      properties:
        fiscalCode:
          type: string
        id:
          type: string
          description: National Unique Identifier
        surname:
          type: string
        noSurname:
          type: string
        name:
          type: string
        noName:
          type: string
        gender:
          type: string
        birthDate:
          $ref: '#/components/schemas/TipoDatiNascitaE000'
    TipoRichiestaAR001:
      type: object
      required:
        - dateOfRequest
        - useCase
        - motivation
      properties:
        dateOfRequest:
          type: string
          description: Date to which the version of the personal data sheet must refer
          format: YYYY-MM-DD
          example: '2021-11-15'
        motivation:
          type: string
          description: Mandatory field for entering the reference number of the case for which the inquiry is made (e.g., protocol number, file, report, etc.).
        useCase:
          type: string
          description: caso d'uso (es. C001)
    TipoErroriAnomalia:
      type: object
      properties:
        warningErrorCode:
          type: string
        warningErrorType:
          type: string
        warningErrorText:
          type: string
        warningErrorObject:
          type: string
        warningErrorField:
          type: string
        warningErrorValue:
          type: string
    TipoListaSubjects:
      type: object
      properties:
        subject:
          type: array
          items:
            $ref: '#/components/schemas/TipoDatiSubjectsEnte'
    VerifyTipoDatiSubjects:
      type: object
      properties:
        infoSubject:
          type: array
          items:
            $ref: '#/components/schemas/InfoSoggettoEnte'
    InfoSoggettoEnte:
      type: object
      properties:
        infoInstitution:
          type: array
          items:
            $ref: '#/components/schemas/TipoInfoSoggetto'
    TipoInfoSoggetto:
      type: object
      properties:
        id:
          type: string
        key:
          type: string
        value:
          $ref: '#/components/schemas/TipoInfoValore'
        textValue:
          type: string
        dataValue:
          type: string
          format: YYYY-MM-DD
          example: '2021-11-15'
        otherData:
          type: string
    TipoInfoValore:
      enum:
        - "A"
        - "N"
        - "S"
      type: string
    TipoDatiSubjectsEnte:
      type: object
      properties:
        generality:
          $ref: '#/components/schemas/TipoGeneralita'
        address:
          type: array
          items:
            $ref: '#/components/schemas/TipoResidenza'
        identifiers:
          $ref: '#/components/schemas/TipoIdentificativi'
        deathDate:
          $ref: '#/components/schemas/TipoDatiEvento'
    TipoDatiNascitaTemplateE000:
      type: object
      properties:
        eventDate:
          type: string
          format: YYYY-MM-DD
          example: '2021-11-15'
        noDay:
          type: string
        birthPlace:
          $ref: '#/components/schemas/TipoLuogoNascitaE000'

    TipoDatiNascitaE000:
      type: object
      properties:
        eventDate:
          type: string
          format: YYYY-MM-DD
          example: '2021-11-15'
        noDay:
          type: string
        noMonth:
          type: string
        birthPlace:
          $ref: '#/components/schemas/TipoLuogoNascitaE000'
    TipoLuogoNascitaE000:
      type: object
      properties:
        exceptionalPlace:
          type: string
        municipality:
          $ref: '#/components/schemas/TipoComune'
        place:
          $ref: '#/components/schemas/TipoLocalita'
    TipoComune:
      type: object
      properties:
        nameMunicipality:
          type: string
        istatCode:
          type: string
        acronymIstatProvince:
          type: string
        placeDescription:
          type: string
    TipoLocalita:
      type: object
      properties:
        placeDescription:
          type: string
        countryDescription:
          type: string
        codState:
          type: string
        provinceCounty:
          type: string
    TipoGeneralita:
      type: object
      properties:
        fiscalCode:
          $ref: '#/components/schemas/TipoCodiceFiscale'
        surname:
          type: string
        noSurname:
          type: string
        name:
          type: string
        noName:
          type: string
        gender:
          type: string
        birthDate:
          type: string
          format: YYYY-MM-DD
          example: '2021-11-15'
        noDay:
          type: string
        noMonth:
          type: string
        birthPlace:
          $ref: '#/components/schemas/TipoLuogoEvento'
        AIRESubject:
          type: string
        yearExpatriation:
          type: string
        idCommonSubjectData:
          $ref: '#/components/schemas/TipoIdSchedaSoggettoComune'
        idSubjectData:
          type: string
        note:
          type: string
    TipoCodiceFiscale:
      type: object
      properties:
        fiscalCode:
          type: string
        fiscalCodeValidity:
          type: string
        dataAttributionValidity:
          type: string
          format: YYYY-MM-DD
          example: '2021-11-15'
    TipoLuogoEvento:
      type: object
      properties:
        exceptionalPlace:
          type: string
        municipality:
          $ref: '#/components/schemas/TipoComune'
        place:
          $ref: '#/components/schemas/TipoLocalita'
    TipoIdSchedaSoggettoComune:
      type: object
      properties:
        idCommonSubjectDataIstat:
          type: string
        idSubjectData:
          type: string
    TipoResidenza:
      type: object
      properties:
        addressType:
          type: string
        noteaddress:
          type: string
        address:
          $ref: '#/components/schemas/TipoIndirizzo'
        foreignState:
          $ref: '#/components/schemas/TipoLocalitaEstera1'
        presso:
          type: string
        addressStartDate:
          type: string
          format: YYYY-MM-DD
          example: '2021-11-15'
    TipoIndirizzo:
      type: object
      properties:
        cap:
          type: string
        municipality:
          $ref: '#/components/schemas/TipoComune'
        fraction:
          type: string
        toponym:
          $ref: '#/components/schemas/TipoToponimo'
        civicNumber:
          $ref: '#/components/schemas/TipoNumeroCivico'
    TipoLocalitaEstera1:
      type: object
      properties:
        foreignAddress:
          $ref: '#/components/schemas/TipoIndirizzoEstero'
        consulate:
          $ref: '#/components/schemas/TipoConsolato'
    TipoToponimo:
      type: object
      properties:
        codType:
          type: string
        type:
          type: string
        originType:
          type: string
        toponymCod:
          type: string
        toponymDenomination:
          type: string
        toponymSource:
          type: string
    TipoNumeroCivico:
      type: object
      properties:
        civicCod:
          type: string
        civicSource:
          type: string
        civicNumber:
          type: string
        metric:
          type: string
        progSNC:
          type: string
        letter:
          type: string
        exponent1:
          type: string
        color:
          type: string
        internalCivic:
          $ref: '#/components/schemas/TipoCivicoInterno'
    TipoCivicoInterno:
      type: object
      properties:
        court:
          type: string
        stairs:
          type: string
        internal1:
          type: string
        espInternal1:
          type: string
        internal2:
          type: string
        espInternal2:
          type: string
        externalStairs:
          type: string
        secondary:
          type: string
        floor:
          type: string
        nui:
          type: string
        isolated:
          type: string
    TipoIndirizzoEstero:
      type: object
      properties:
        cap:
          type: string
        place:
          $ref: '#/components/schemas/TipoDatoLocalitaEstera'
        toponym:
          $ref: '#/components/schemas/TipoToponimoEstero'
    TipoConsolato:
      type: object
      properties:
        consulateCod:
          type: string
        consulateDescription:
          type: string
    TipoDatoLocalitaEstera:
      type: object
      properties:
        placeDescription:
          type: string
        countryDescription:
          type: string
        countryState:
          type: string
        provinceCounty:
          type: string
    TipoToponimoEstero:
      type: object
      properties:
        denomination:
          type: string
        civicNumber:
          type: string
    TipoIdentificativi:
      type: object
      properties:
        id:
          type: string
    TipoDatiEvento:
      type: object
      properties:
        eventDate:
          type: string
          format: YYYY-MM-DD
          example: '2021-11-15'
        noDay:
          type: string
        noMonth:
          type: string
        eventPlace:
          $ref: '#/components/schemas/TipoLuogoEvento'
        eventAct:
          $ref: '#/components/schemas/TipoAttoEvento'
    TipoAttoEvento:
      type: object
      properties:
        act:
          $ref: '#/components/schemas/TipoAtto'
        actANSC:
          $ref: '#/components/schemas/TipoAttoANSC'
    TipoAttoANSC:
      type: object
      properties:
        idANSC:
          type: string
        municipalityRegistration:
          $ref: '#/components/schemas/TipoComune'
        act:
          type: string
        municipalOffice:
          type: string
        municipalNumber:
          type: string
        dateFormationAct:
          type: string
          format: YYYY-MM-DD
          example: '2021-11-15'
        transcribed:
          type: string
    TipoAtto:
      type: object
      properties:
        municipalityRegistration:
          $ref: '#/components/schemas/TipoComune'
        municipalOffice:
          type: string
        year:
          type: string
        part:
          type: string
        series:
          type: string
        actNumber:
          type: string
        volume:
          type: string
        dateFormationAct:
          type: string
          format: YYYY-MM-DD
          example: '2021-11-15'
        transcribed:
          type: string
    GeneralError:
      type: object
      properties:
        idOp:
          type: string
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Error'
    Error:
      type: object
      properties:
        warningErrorCode:
          type: string
        warningErrorType:
          type: string
        warningErrorText:
          type: string
        warningErrorObject:
          type: string
        warningErrorField:
          type: string
        warningErrorValue:
          type: string

  parameters:
    pathUUID:
      description: >-
        Saved use case identifier
      name: uuid
      in: path
      required: true
      schema:
        type: string
        format: uuid

  securitySchemes:
    bearerAuth:
      type: http
      description: 'A bearer token in the format of a JWS and conformed to the specifications included in [RFC8725](https://tools.ietf.org/html/RFC8725).'
      scheme: bearer
      bearerFormat: JWT
    Agid-JWT-Signature:
      type: apiKey
      in: header
      name: Agid-JWT-Signature
      description: |-
        JWS signature header. The value of this header represents a JWS signature. Refer to [integrity_rest_02] for information on the integrity of the REST message payload in PDND
    Agid-JWT-TrackingEvidence:
      type: apiKey
      in: header
      name: Agid-JWT-TrackingEvidence
      description: |-
        JWS signature header. The value of this header is a JWS signature. Refer to [audit_rest_02] for the forwarding of tracked data within the REST consumer's domain with correlation. Claims to include:
        userID: a unique identifier of the user within the consumer's domain who initiated the request for access to the provider's e-service;
        userLocation: a unique identifier of the workstation within the consumer's domain from which the request for access to the provider's e-service originated;
        LoA: the level of assurance or security adopted in the digital authentication process within the consumer's domain.