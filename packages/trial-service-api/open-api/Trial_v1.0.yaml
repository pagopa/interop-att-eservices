openapi: 3.0.3
info:
  title: Consultazione API Trial 
  description: |-
    Servizio per la visualizzazione del tracciamento delle chiamate API
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
  x-summary: Trial
servers:
  - url: 'https://inserire.url.test.app.it'
    description: Url di test
  - url: 'https://insrire.url.esercizio.app.it'
    description: Url di esercizio
tags:
  - name: Trial
    description: Visualizzazione risultati Trial
  - name: Health
    description: Verifica stato applicativo
security:
  - bearerAuth: []

paths:

  /trial/search:
    get:
      tags:
        - Trial
      summary: Select paginated Trials results for a specific CorrelationId 
      description: Select paginated Trials results for a specific CorrelationId
      operationId: SelectPaginatedTrial
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: page
          schema:
            type: integer
          description: Numero della pagina da recuperare
        - in: query
          name: pageSize
          schema:
            type: integer
          description: Numero di elementi per ogni pagina
        - in: query
          name: purposeId
          schema:
            type: string
        - in: query
          name: correlationId
          schema:
            type: string
          description: x-correlation-id used for the API request
        - in: query
          name: path
          schema:
            type: string
          description: request path
        - in: query
          name: method
          schema:
            type: string
          description: request method
      responses:
        '200':
          description: Trial retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTrialResponse'
        '400':
          description: Bad request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '429':
          description: Too Many Requests
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'

  /trial/check:
    get:
      tags:
        - Trial
      summary: Get All Checks
      description: Get All Checks
      operationId: GetAllChecks
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Check retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CheckResponse'
        '400':
          description: Bad request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '429':
          description: Too Many Requests
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'


  /trial/category:
    get:
      tags:
        - Trial
      summary: Get All Categories
      description: Get All Categories
      operationId: GetAllCategories
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Categories retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CategoryResponse'
        '400':
          description: Bad request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '429':
          description: Too Many Requests
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'

  /trial/status:
    get:
      tags:
        - Health
      summary: Health status endpoint
      description: Return ok
      operationId: getStatus
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"

components:
  schemas:
    Problem:
      required:
        - type
        - status
        - title
        - errors
      properties:
        type:
          description: URI reference of type definition
          type: string
        status:
          description: The HTTP status code generated by the origin server for this occurrence of the problem.
          example: 503
          type: integer
        title:
          description: A short, summary of the problem type. Written in english and readable
          example: Service Unavailable
          type: string
        correlationId:
          description: Unique identifier of the request
          example: "53af4f2d-0c87-41ef-a645-b726a821852b"
          type: string
        detail:
          description: A human readable explanation of the problem.
          example: Request took too long to complete.
          type: string
        errors:
          type: array
          minItems: 1
          items:
            $ref: "#/components/schemas/ProblemError"

    ProblemError:
      required:
        - code
        - detail
      properties:
        code:
          description: Internal code of the error
          example: 123-4567
          type: string
        detail:
          description: A human readable explanation specific to this occurrence of the problem.
          example: Parameter not valid
          type: string 

    PaginatedTrialResponse:
      type: object
      properties:
        totalItems:
          type: integer
          description: elements total number
        totalPages:
          type: integer
          description: pages total numbers
        currentPage:
          type: integer
          description: current page
        data:
          type: array
          items:
            $ref: '#/components/schemas/PaginatedTrials'
                
    PaginatedTrials:
      type: object
      properties:
        purpose_id:
          type: string
          description: client id
        correlation_id:
          type: string
          description: request correlationId
        trials:
          type: array
          items:
            $ref: '#/components/schemas/PaginatedTrialItem'

    PaginatedTrialItem:
      type: object
      properties:
        id:
          type: integer
          description: ID dell'elemento
        operation_path:
          type: string
          description: request path
          example: "/test/trial"
        operation_method:
          type: string
          description: request method
          example: "GET"
        response:
          type: string
          description: response from the request
          example: "OK"
        created_date:
          type: string
          format: date-time
          description: timestamp of the request execution
        check:
          $ref: "#/components/schemas/CheckResponse"
    
    CheckResponse:
      type: object
      properties:
        id:
          type: integer
        code:
          type: string
          description: attribute name
        description:
          type: string
          description: check description
        order:
          type: number
          description: execution order
        category:
          $ref: "#/components/schemas/CategoryResponse"
    
    CategoryResponse:
      type: object
      properties:
        id:
          type: integer
        code:
          type: string
          description: attribute name
        description:
          type: string
          description: category description
        order:
          type: number
          description: execution order

  securitySchemes:
    bearerAuth:
      type: http
      description: 'A bearer token in the format of a JWS and conformed to the specifications included in [RFC8725](https://tools.ietf.org/html/RFC8725).'
      scheme: bearer
      bearerFormat: JWT
